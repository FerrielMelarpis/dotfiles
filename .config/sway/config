# vim:foldmethod=marker:foldlevel=0

# Config for sway.
# Read `man 5 sway` for a complete reference.
# Author: Gadzhi Kharkharov <me@kkga.me>

# Variables {{{

# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $launcher dmenu_path | fzf | xargs swaymsg exec GDK_BACKEND=wayland

# }}}

# Input configuration {{{
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# LEOPOLD Keyboard
input "2131:308:LEOPOLD_Mini_Keyboard" {
    xkb_layout us,ru
    xkb_options grp:alt_space_toggle
    repeat_delay 250
    repeat_rate 50
}

# }}}

# Output configuration {{{

# You can get the names of your outputs by running: swaymsg -t get_outputs

output * bg $color0 solid_color

# Devices
output DP-1 pos 0 0 res 3840x2160 scale 2 
output DP-2 res 3840x2160 scale 2

# Backlight
#bindsym $mod+F9 exec light -U 5
#bindsym $mod+F10 exec light -A 5

# }}}

# Idle configuration {{{

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# }}}

# Visual settings {{{

font pango:Input Sans Narrow 9

# window borders
default_orientation auto
hide_edge_borders smart
default_border pixel
smart_borders on

# gaps
gaps inner 16
gaps outer 0
smart_gaps on

# }}}

# Key bindings {{{

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# lock screen
bindsym $mod+Shift+L exec swaylock -c 000000

#bindsym $mod+d exec $term --title=launcher -e "bash -c 'compgen -c | sort -u | fzf --no-extended --print-query | tail -n1 | xargs -r swaymsg -t command exec'"

bindsym $mod+d exec gnome-terminal --title=launcher -e "sh -c \'$launcher\'"
bindsym $mod+Control+f exec GDK_BACKEND=wayland firefox-nightly
for_window [title="^launcher$"] floating enable, border pixel
for_window [floating] border csd

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# reload the configuration file
bindsym $mod+Shift+c reload

# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# screenshot to file
bindsym $mod+Shift+p exec grim -g "$(slurp)" $(xdg-user-dir PICTURES)/$(date +'%Y-%m-%d-%H%M%S_grim.png')

# screenshot to clipboard
bindsym $mod+p exec grim -g "$(slurp)" - | wl-copy

# Moving around

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
# bindsym $mod+Shift+$left move left
# bindsym $mod+Shift+$down move down
# bindsym $mod+Shift+$up move up
# bindsym $mod+Shift+$right move right
# ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# Layout stuff

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Resizing containers

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# }}}

# Colors {{{

set $fg          #BCBCBC
set $bg          #262626
set $color0      #1C1C1C
set $color8      #444444
set $color1      #AF5F5F
set $color9      #FF8700
set $color2      #5F875F
set $color10     #87AF87
set $color3      #87875F
set $color11     #FFFFAF
set $color4      #5F87AF
set $color12     #8FAFD7
set $color5      #5F5F87
set $color13     #8787AF
set $color6      #5F8787
set $color14     #5FAFAF
set $color7      #6C6C6C
set $color15     #FFFFFF

# class                 border  backgr. text    indicat child_border
client.focused          $color4 $color4 $color15 $bg     $color4
client.focused_inactive $bg     $bg     $fg     $bg     $bg
client.unfocused        $bg     $bg     $fg     $bg     $bg
client.urgent           $bg     $bg     $fg     $fg     $color1

# }}}

# Status Bar {{{
# Read `man 5 sway-bar` for more information about this section.

bar {
    position top
    height 20
    tray_output DP-1
    #status_command while ~/.config/sway/sway_bar/sway_bar.sh; do sleep 1; done
    #swaybar_command waybar
    status_command ~/bin/i3status-rs ~/.config/i3status-rust/config.toml
    font pango:Input Sans Compressed 9
    separator_symbol ""
    colors {
         background $bg
         statusline $fg
         separator $fg

         focused_workspace  $fg $fg $bg
         active_workspace   $bg $bg $fg
         inactive_workspace $bg $bg $fg
         urgent_workspace   $bg $bg $fg
         binding_mode       $color1 $color1 $color15
    }
}

# }}}

# Startup apps {{{
exec dropbox start
exec mako
# }}}

include /etc/sway/config.d/*
